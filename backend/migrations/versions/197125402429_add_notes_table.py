"""Add notes table

Revision ID: 197125402429
Revises: 
Create Date: 2025-10-25 09:43:33.740067

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '197125402429'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notes_id'), 'notes', ['id'], unique=False)
    op.alter_column('expenses', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('expenses', 'amount',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=False)
    op.alter_column('expenses', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('expenses', 'date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(timezone=True),
               nullable=True)
    op.create_index(op.f('ix_expenses_id'), 'expenses', ['id'], unique=False)
    op.drop_constraint(op.f('expenses_user_id_fkey'), 'expenses', type_='foreignkey')
    op.create_foreign_key(None, 'expenses', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('expenses', 'created_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('expenses', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'expenses', type_='foreignkey')
    op.create_foreign_key(op.f('expenses_user_id_fkey'), 'expenses', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_expenses_id'), table_name='expenses')
    op.alter_column('expenses', 'date',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.DATE(),
               nullable=False)
    op.alter_column('expenses', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('expenses', 'amount',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)
    op.alter_column('expenses', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index(op.f('ix_notes_id'), table_name='notes')
    op.drop_table('notes')
    # ### end Alembic commands ###
